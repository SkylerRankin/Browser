/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'org.openjfx.javafxplugin' version '0.0.10'

    id 'checkstyle'

    // Plugin to automatic Lombok configuration.
    id "io.freefair.lombok" version "6.5.1"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
    implementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // Mockito framework dependency.
    testImplementation "org.mockito:mockito-core:3.+"

    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    // jsoup HTML parser library @ https://jsoup.org/
    // This is used for loading HTML files for integration tests.
    implementation 'org.jsoup:jsoup:1.15.3'
}

application {
    // Define the main class for the application.
    mainClass = 'browser.BrowserApplication'
}

javafx {
    version = "17"
    modules = [ 'javafx.controls', 'javafx.swing' ]
}

checkstyle {
    configFile file('config/checkstyle.xml')
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}
